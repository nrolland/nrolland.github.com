<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://xquant.net/</id>
  <title>xQuant strange blog</title>
  <updated>2015-05-11T22:00:00Z</updated>
  <link rel="alternate" href="http://xquant.net/"/>
  <link rel="self" href="http://xquant.net/blog/feed.xml"/>
  <author>
    <name>Nicolas</name>
    <uri>http://xquant.net/</uri>
  </author>
  <entry>
    <id>tag:xquant.net,2015-05-12:/posts/2015/05/12/Weekly-links/</id>
    <title type="html">Weekly links for 2015-05-12</title>
    <published>2015-05-11T22:00:00Z</published>
    <updated>2015-05-11T22:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2015/05/12/Weekly-links/"/>
    <content type="html">
&lt;dt&gt;&lt;a href=https://github.com/rudolfochrist/interleave&gt; rudolfochrist/interleave  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;this Emacs mode .. presents your PDF side by side to an Org Mode buffer with you notes.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=https://github.com/abo-abo/hydra&gt; abo-abo/hydra  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Finally deal with shortcuts in Emacs : a package for GNU Emacs that can be used to tie related commands into a family of short bindings with a common prefix - a Hydra.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.haskellforall.com/2012/05/scrap-your-type-classes.html&gt; Haskell for all: Scrap your type classes  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;we as Haskell programmers have been conditioned to believe that it is correct and normal to have operators change behavior silently when passed different arguments, which completely subverts type-safety.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=https://khan.github.io/KaTeX/&gt; KaTeX – The fastest math typesetting library for the web  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;KATEX The fastest math typesetting library for the web&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://agda.notogawa.com/challenge/&gt; The Agda Challenge  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Agda Challenge This is a proof server. You can enjoy theorem proving here in Agda&lt;/dd&gt;

</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2015-05-04:/posts/2015/05/04/Weekly-links/</id>
    <title type="html">Weekly links for 2015-05-04</title>
    <published>2015-05-03T22:00:00Z</published>
    <updated>2015-05-03T22:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2015/05/04/Weekly-links/"/>
    <content type="html">
&lt;dt&gt;&lt;a href=http://www.stat.cmu.edu/~cshalizi/uADA/13/&gt; 36-402, Undergraduate Advanced Data Analysis (2013)  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The goal of this class is to train you in using statistical models to analyze data — as data summaries, as predictive instruments, and as tools for scientific inference. We will build on the theory and applications of the linear model, introduced in 36-401, extending it to more general functional forms, and more general kinds of data, emphasizing the computation-intensive methods introduced since the 1980s. After taking the class, when you're faced with a new data-analysis problem, you should be able to (1) select appropriate methods, (2) use statistical software to implement them, (3) critically evaluate the resulting statistical models, and (4) communicate the results of their analyses to collaborators and to non-statisticians.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=https://www.gitignore.io/&gt; gitignore.io  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create .gitignore files for your project&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.firepad.io/#1&gt; Firepad - An open source collaborative code and text editor  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Real-time collaboration with no server code.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=https://www.haskell.org/haskellwiki/Cookbook&gt; Cookbook - HaskellWiki  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Haskell Cookbook&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://roscidus.com/blog/blog/2014/06/06/python-to-ocaml-retrospective/&gt; Python to OCaml: retrospective - Thomas Leonard's blog  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;/dd&gt;

</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2014-08-07:/posts/2014/08/Tokyo2014/</id>
    <title type="html">こにちわ　東京 - Types, universals and existentials</title>
    <published>2014-08-07T09:00:00Z</published>
    <updated>2014-08-07T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2014/08/Tokyo2014/"/>
    <content type="html">&lt;h2 id="slides"&gt;Slides&lt;/h2&gt;

&lt;p&gt;These are the slides of the presentation I gave at the &lt;a href="http://fsmutokyo.connpass.com/event/7247/"&gt;Tokyo F# meetup&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was really good to see so many interested people and a real
pleasure to connect with the technical crowd of Tokyo, which I never
had the occasion before. As usual, Japan was top quality for the people,
just like the rest !&lt;/p&gt;

&lt;p&gt;Hopefully the event was useful to connect among the functional
programmers of the industry and beyond.&lt;/p&gt;

&lt;h2 id="why-functional-"&gt;Why functional ?&lt;/h2&gt;

&lt;p&gt;Thinking functionally is useful even for imperative programmer : Just like
@Bleis -san mentioned during the event, learning F# is an excellent way to
take your C# to the next level.&lt;/p&gt;

&lt;p&gt;It is also clear across the board that functional programming is a common theme
among the next generation languages. The good news is that the ideas are
&lt;strong&gt;universal&lt;/strong&gt; and stand the trial of time, it never gets outdated by a new
technology : the ideas you learn in one language are often true in another.&lt;/p&gt;

&lt;p&gt;Of course FP can also be appreciated for its own beauty, as it is also a mathematical
science which deals with universal truth.&lt;/p&gt;

&lt;p&gt;So wether it is for real application or oxygen for the mind, practice your ラジオ体操
[Taiso, a popular morning exercise] for the mind, and collect the stamps,
they will stay forever with you and help many around you.&lt;/p&gt;

&lt;iframe src="//www.slideshare.net/slideshow/embed_code/37611598" width="800" height="600" frameborder="0" marginwidth="0" marginheight="0" align="center" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen=""&gt; &lt;/iframe&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2014-03-01:/notes/formatting/qr/</id>
    <title type="html">Projection, QR, Gram Schmidt</title>
    <published>2014-03-01T09:00:00Z</published>
    <updated>2014-03-01T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/notes/formatting/qr/"/>
    <content type="html">&lt;p&gt;A little note about projections using F# to illustrate QR&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-12-14:/notes/formatting/covariance/</id>
    <title type="html">Covariance and contravariance compressed redux</title>
    <published>2013-12-14T09:00:00Z</published>
    <updated>2013-12-14T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/notes/formatting/covariance/"/>
    <content type="html">&lt;p&gt;A very little note that can help remembering what Contravariance and Covariance is about.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-11-22:/notes/formatting/huffman/</id>
    <title type="html">Huffman coding in F#</title>
    <published>2013-11-22T09:00:00Z</published>
    <updated>2013-11-22T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/notes/formatting/huffman/"/>
    <content type="html">&lt;p&gt;In its course on &lt;a href="https://www.coursera.org/"&gt;functional programming principles in Scala&lt;/a&gt;, 
Martin Odersky talks about Huffman coding, which showcase a common recursion strategy in FP.&lt;/p&gt;

&lt;p&gt;The succinct and nice syntax of F# make it quite simple to write, and we’ll use 
this as a preparation step to a future illustration of Shannon source coding theorem.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-10-13:/notes/formatting/leftistheap/</id>
    <title type="html">Heaps</title>
    <published>2013-10-13T09:00:00Z</published>
    <updated>2013-10-13T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/notes/formatting/leftistheap/"/>
    <content type="html">&lt;p&gt;Commented F# code for the heap data structure, starting with the leftist tree heap, which exploits a clever recursive scheme.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-09-16:/posts/2013/09/iphone_and_RP/</id>
    <title type="html">Reactive programming and iPhone 5S</title>
    <published>2013-09-16T09:00:00Z</published>
    <updated>2013-09-16T09:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2013/09/iphone_and_RP/"/>
    <content type="html">&lt;p&gt;The new iPhone is a good illustration of why Reactive Programming, meaning having a first class notion of &lt;em&gt;stream&lt;/em&gt;, is important. Indeed, the new &lt;a href="http://techcrunch.com/2013/09/15/apples-m7-motion-sensing-coprocessor-is-the-wizard-behind-the-curtain-for-the-iphone-5s/"&gt;M7&lt;/a&gt; is really doing just that :&lt;/p&gt;

&lt;p&gt;It starts from multiple streams of data, namely acceleration, spatial orientation, and combines them into a higher level representation, to derive streams of &lt;em&gt;activity&lt;/em&gt;, say walking, running, driving etc.. The key concept here is the combination, which is really what functional programming and reactive programming stands for.&lt;/p&gt;

&lt;p&gt;Another important aspect is that those operations are &lt;strong&gt;not&lt;/strong&gt; happening on a &lt;em&gt;universal&lt;/em&gt; microprocessor, but are compiled down to hardware. This view of hardware as being a compiled down version of a function application is a very rich one.&lt;/p&gt;

&lt;p&gt;One can indeed come with very precise equivalency rules to transform (in both ways) the functions performed by those reactive programs into a physical layout. cf &lt;a href="http://en.wikipedia.org/wiki/G%C3%A9rard_Berry"&gt;Gérard Berry&lt;/a&gt; in his &lt;a href="http://www.college-de-france.fr/site/en-gerard-berry/course-2013-05-21-10h00.htm"&gt;College de France lecture on Time and Computing&lt;/a&gt; for a no-nonsense lesson on this nice perspective (I recommend the french version for francophone..)&lt;/p&gt;

&lt;p&gt;One can even express tradeoff between the size of the circuit and how long it will take to compute, and prove functional equivalency between those layouts. Far from being a just a fancy observation, this proves essential when it comes to putting a computer in command of your airplane or nuclear central, where &lt;em&gt;proving&lt;/em&gt; the lack of bug is of definite value !&lt;/p&gt;

&lt;p&gt;And here is also the key of the M7 chip : by having a hardware specific translation, one can lower the energy consumption of those operations to a minimum, which opens new applications… like a (ultra low power) wearable device !&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-09-16:/posts/2013/09/16/Weekly-links/</id>
    <title type="html">Weekly links for 2013-09-16</title>
    <published>2013-09-15T22:00:00Z</published>
    <updated>2013-09-15T22:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2013/09/16/Weekly-links/"/>
    <content type="html">
&lt;dt&gt;&lt;a href=http://www.cs.cornell.edu/courses/cs312/2008sp/&gt; Data Structures and Functional Programming CS312 Home  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;A course from Computer Science Department- Cornell University&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.cs.princeton.edu/courses/archive/spring10/cos433/mathcs.pdf&gt; Mathematics for Computer Science - Eric Lehman and Tom Leighton MIT  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;25 lessons. 1 a day keeps bug away.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://theinternetwishlist.com/&gt; The Internet Wishlist  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The Internet Wishlist is a collection of ideas for apps and websites people are wishing for. Think of it like a suggestion box for the future of technology. Ideas range from web to mobile, realistic to imaginary, and helpful to humorous. In a world of me-too startups, we hope this project inspires entrepreneurs, developers and designers to innovate and build the products and features that people want. To contribute, post an idea on Twitter and include #theiwl in your tweet&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.vagrantup.com/&gt; Vagrant  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Create and configure lightweight, reproducible, and portable development environments&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.computing.dundee.ac.uk/staff/katya/ML4PG/sppics.pdf&gt; Statistical Proof-Patterns in Coq/SSReflect  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;In this paper, we are making the rst steps towards automated detection of signi cant proof patterns in Coq/SSReflect&lt;/dd&gt;

</content>
  </entry>
  <entry>
    <id>tag:xquant.net,2013-06-05:/posts/2013/06/05/Weekly-links/</id>
    <title type="html">Weekly links for 2013-06-05</title>
    <published>2013-06-04T22:00:00Z</published>
    <updated>2013-06-04T22:00:00Z</updated>
    <link rel="alternate" href="http://xquant.net/posts/2013/06/05/Weekly-links/"/>
    <content type="html">
&lt;dt&gt;&lt;a href=http://www.youtube.com/watch?v=a1zDuOPkMSw&amp;feature=player_embedded&gt; Hamming, "You and Your Research" (June 6, 1995) - YouTube  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;The Art of Doing Science and Engineering: Learning to Learn&amp;quot; was the capstone course by Dr. Richard W. Hamming (1915-1998) for graduate students at the Naval Postgraduate School (NPS) in Monterey California.&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://faculty.ycp.edu/~dbabcock/PastCourses/cs360/lecture/about.html&gt; Lecture Notes  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Following &amp;quot;introduction to Algorithm&amp;quot; of Cormen in a detailed way&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://www.seas.harvard.edu/courses/cs281/&gt; CS281: Advanced Machine Learning  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Harvard University, Fall 2011&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://danroy.org/papers/Roy-PHD-2011.pdf&gt; Computability, inference and modeling in probabilistic programming  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Phd thesis by Daniel M. Roy. The basic measure part is an excellent revision !&lt;/dd&gt;

&lt;dt&gt;&lt;a href=http://staff.aist.go.jp/reynald.affeldt/documents/affeldt-itp2012-preprint.pdf&gt; Formalization of Shannon's Theorems in SSReflect-Coq  &lt;/a&gt;&lt;/dt&gt;
&lt;dd&gt;Our first contribution is to provide a library of formal de finitions and lemmas for information theory...&lt;/dd&gt;

</content>
  </entry>
</feed>

